/* General Styles */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
    color: #333;
  }
  
  header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 1rem;
  }
  
  header p {
    font-size: 1rem;
    margin-top: 0.5rem;
  }
  
  main {
    max-width: 900px;
    margin: 2rem auto;
    padding: 1rem;
    background: white;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  
  h2 {
    color: #333;
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    main {
      padding: 0.5rem;
    }
  }
  
  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  input, textarea, select, button {
    padding: 0.5rem;
    font-size: 1rem;
    border: 1px solid #ccc;
    border-radius: 5px;
  }
  
  button {
    background-color: #333;
    color: white;
    border: none;
    cursor: pointer;
  }
  
  button:hover {
    background-color: #555;
  }
  
  #bug-list {
    list-style: none;
    padding: 0;
  }
  
  .bug-item {
    margin-bottom: 1rem;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 1rem;
    background-color: #f9f9f9;
  }
  
  .bug-item strong {
    font-size: 1.2rem;
  }
  
  .actions button {
    padding: 0.3rem 0.5rem;
    background-color: red;
    color: white;
    border: none;
    border-radius: 3px;
  }
  
  .actions button:hover {
    background-color: darkred;
  }
  .watermark-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Ensures they don't interfere with other elements */
    z-index: -1; /* Send to background */
  }
  
  /* Individual Bug Symbol */
  .bug-symbol {
    position: absolute;
    font-size: calc(12px + (50 - 12) * var(--size, 0.5)); /* Varying sizes */
    color: rgba(0, 0, 0, calc(0.2 + 0.5 * var(--opacity, 1))); /* Darker shades */
    transform: rotate(calc(var(--rotate, 0) * 1deg)); /* Add rotation */
    animation: float calc(6s + 4s * var(--speed, 1)) infinite ease-in-out; /* Varying animation speed */
  }
  
  /* Floating Animation */
  @keyframes float {
    0% {
      transform: translateY(0) rotate(calc(var(--rotate, 0) * 1deg));
    }
    50% {
      transform: translateY(20px) rotate(calc(var(--rotate, 0) * 1deg));
    }
    100% {
      transform: translateY(0) rotate(calc(var(--rotate, 0) * 1deg));
    }
  }
  